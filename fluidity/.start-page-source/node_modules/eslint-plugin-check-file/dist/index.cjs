/*! @author Huan Luo <dukeluo@outlook.com> (https://shaiwang.life) */
"use strict";var e=require("path"),t=require("micromatch"),o=require("is-glob");const n=/^<(\d+)>$/,r=/^[A-Za-z]:\\/,i=/\$(\d*)/,a=e=>"[object Object]"===Object.prototype.toString.call(e),s=e=>null==e,c=e=>""===e||(e=>null!=e&&e.length>=0&&"[object Array]"===Object.prototype.toString.call(e))(e)&&0===e.length||a(e)&&0===Object.keys(e).length,l=(...e)=>t=>e.reduce(((e,t)=>t(e)),t),d=l(c,(e=>!e)),p=e=>(...t)=>e.replace(new RegExp(i,"g"),((e,o)=>t[o.trim()])),m=p('The naming pattern object "$0" does not appear to be an Object type, please double-check it and try again'),f=p('There is an invalid pattern "$0", please double-check it and try again'),u=p('The prefined match "$0" is not found in the pattern "$1", please double-check it and try again'),h=p('The filename "$0" matches the blocklisted "$1" pattern, use a pattern like "$2" instead'),g=p('The filename "$0" does not match the "$1" pattern'),b=p('The folder of the file "$0" does not match the "$1" pattern'),y=p('The folder "$0" does not match the "$1" pattern'),x=e=>`https://github.com/DukeLuo/eslint-plugin-check-file/blob/main/docs/rules/${e}.md`,$=t=>e.posix.basename(t),A=t=>e.posix.join(e.posix.dirname(t),e.posix.sep),j=(e,t=!1)=>e.substring(0,t?e.indexOf("."):e.lastIndexOf(".")),E=t=>t.split(e.posix.sep).filter(d),v=t=>{const o=E(t);let n=[];for(let t=0;t<o.length;t++)o.slice(t).reduce(((t,o,r)=>{const i=e.posix.join(t,o,e.posix.sep);return r>=1&&n.push(i),i}),"");return n.unshift(e.posix.join(o[0],e.posix.sep)),n},_=t=>t.split(e.sep).join(e.posix.sep),O=e=>e.replace(r,""),T=t=>{const o=(n=t.physicalFilename||t.getPhysicalFilename(),r=t.cwd||t.getCwd(),n.replace(e.join(r,e.sep),""));var n,r;return l(O,_)(o)},z="+([a-z])*([a-z0-9])*([A-Z]*([a-z0-9]))",S="+([a-z])*([a-z0-9])*(-+([a-z0-9]))";var k=Object.freeze({__proto__:null,CAMEL_CASE:z,FLAT_CASE:"+([a-z0-9])",KEBAB_CASE:S,PASCAL_CASE:"*([A-Z]*([a-z0-9]))",SCREAMING_SNAKE_CASE:"+([A-Z])*([A-Z0-9])*(_+([A-Z0-9]))",SNAKE_CASE:"+([a-z])*([a-z0-9])*(_+([a-z0-9]))"});const w=([e,o],r)=>{const i=t.capture(e,r);if(s(i))return[e,o];const a=[...o.matchAll(new RegExp(n,"g"))];if(c(a))return[e,o];const l=a.reduce(((t,n)=>{const r=+n[1];if(s(i[r]))throw new Error(u(o,e));return t.replace(n[0],i[r])}),o);return[e,l]},P=(e,o,n,r)=>t.isMatch(e,o)?n&&r&&t.isMatch(n,k[r]||r)?void 0:{path:e,pattern:r}:void 0,C=`@(${S}|${`\\[${z}\\]`}|${`\\[...${z}\\]`}|${`\\[\\[...${z}\\]\\]`}|${`\\(${S}\\)`}|${`\\@${S}`})`;var M=Object.freeze({__proto__:null,NEXT_JS_APP_ROUTER_CASE:C});const L=(e,t,o)=>{if(!a(e))return m(e);for(const[n,r]of Object.entries(e)){if(!t(n))return f(n);if(!o(r))return f(r)}},F=e=>Object.keys(k).includes(e),Z=o,R=e=>Z(e)||F(e)||n.test(e),N=e=>Z(e)||F(e)||(e=>Object.keys(M).includes(e))(e);var q={meta:{type:"layout",docs:{description:"The filename should be blocklisted",category:"Layout & Formatting",recommended:!1,url:x("filename-blocklist")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:t=>{const o=e.options[0],n=L(o,Z,Z);if(n)return void e.report({node:t,message:n});const r=T(e),i=$(r);for(const[n,a]of Object.entries(o)){if(P(r,n)||P(i,n))return void e.report({node:t,message:h(i,n,a)})}}})},K={meta:{type:"layout",docs:{description:"The filename should follow the filename naming convention",category:"Layout & Formatting",recommended:!1,url:x("filename-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}},{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"}}}]},create:e=>({Program:t=>{const o=e.options[0],n=L(o,Z,R);if(n)return void e.report({node:t,message:n});const r=T(e),i=$(r),{ignoreMiddleExtensions:a}=e.options[1]||{};for(const[n,s]of Object.entries(o))try{const[e,t]=w([n,s],r);if(P(r,e,j(i,a),t))throw new Error(g(i,s))}catch(o){e.report({node:t,message:o.message})}}})},B={meta:{type:"layout",docs:{description:"The folder should match the naming pattern specified by its file",category:"Layout & Formatting",recommended:!1,url:x("folder-match-with-fex")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:t=>{const o=e.options[0],n=L(o,Z,Z);if(n)return void e.report({node:t,message:n});const r=T(e),i=$(r),a=A(r);for(const[n,s]of Object.entries(o)){if(P(i,n,a,s))return void e.report({node:t,message:b(r,s)})}}})},I={meta:{type:"layout",docs:{description:"The folder should follow the folder naming convention",category:"Layout & Formatting",recommended:!1,url:x("folder-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:o=>{const n=e.options[0],r=L(n,Z,N);if(r)return void e.report({node:o,message:r});const i=T(e),a=A(i);for(const[r,i]of Object.entries(n))if(t.isMatch(a,r,{contains:!0}))for(const n of v(a)){const a=t.capture(r,n,{dot:!0});if(s(a))continue;const c=a.filter(d).reduce(((e,t)=>e.concat(E(t))),[]);for(const n of c)if(!t.isMatch(n,k[i]||M[i]||i))return void e.report({node:o,message:y(n,i)})}}})};const D={"filename-blocklist":q,"filename-naming-convention":K,"folder-match-with-fex":B,"folder-naming-convention":I,"no-index":{meta:{type:"layout",docs:{description:'A file cannot be named "index"',category:"Layout & Formatting",recommended:!1,url:x("no-index")},fixable:null,schema:[{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"}}}]},create:e=>({Program:t=>{const{ignoreMiddleExtensions:o}=e.options[0]||{},n=T(e),r=$(n);"index"!==j(r,o)||e.report({node:t,message:'The filename "index" is not allowed'})}})}};exports.rules=D;
