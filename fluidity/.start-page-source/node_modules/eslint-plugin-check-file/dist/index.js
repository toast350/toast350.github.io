/*! @author Huan Luo <dukeluo@outlook.com> (https://shaiwang.life) */
import{posix as e,join as t,sep as o}from"path";import n from"micromatch";import r from"is-glob";const i=/^<(\d+)>$/,a=/^[A-Za-z]:\\/,s=/\$(\d*)/,c=e=>"[object Object]"===Object.prototype.toString.call(e),l=e=>null==e,d=e=>""===e||(e=>null!=e&&e.length>=0&&"[object Array]"===Object.prototype.toString.call(e))(e)&&0===e.length||c(e)&&0===Object.keys(e).length,p=(...e)=>t=>e.reduce(((e,t)=>t(e)),t),m=p(d,(e=>!e)),f=e=>(...t)=>e.replace(new RegExp(s,"g"),((e,o)=>t[o.trim()])),u=f('The naming pattern object "$0" does not appear to be an Object type, please double-check it and try again'),h=f('There is an invalid pattern "$0", please double-check it and try again'),g=f('The prefined match "$0" is not found in the pattern "$1", please double-check it and try again'),b=f('The filename "$0" matches the blocklisted "$1" pattern, use a pattern like "$2" instead'),y=f('The filename "$0" does not match the "$1" pattern'),$=f('The folder of the file "$0" does not match the "$1" pattern'),A=f('The folder "$0" does not match the "$1" pattern'),j=e=>`https://github.com/DukeLuo/eslint-plugin-check-file/blob/main/docs/rules/${e}.md`,E=t=>e.basename(t),x=t=>e.join(e.dirname(t),e.sep),_=(e,t=!1)=>e.substring(0,t?e.indexOf("."):e.lastIndexOf(".")),v=t=>t.split(e.sep).filter(m),O=t=>{const o=v(t);let n=[];for(let t=0;t<o.length;t++)o.slice(t).reduce(((t,o,r)=>{const i=e.join(t,o,e.sep);return r>=1&&n.push(i),i}),"");return n.unshift(e.join(o[0],e.sep)),n},T=t=>t.split(o).join(e.sep),z=e=>e.replace(a,""),S=e=>{const n=(r=e.physicalFilename||e.getPhysicalFilename(),i=e.cwd||e.getCwd(),r.replace(t(i,o),""));var r,i;return p(z,T)(n)},k="+([a-z])*([a-z0-9])*([A-Z]*([a-z0-9]))",w="+([a-z])*([a-z0-9])*(-+([a-z0-9]))";var P=Object.freeze({__proto__:null,CAMEL_CASE:k,FLAT_CASE:"+([a-z0-9])",KEBAB_CASE:w,PASCAL_CASE:"*([A-Z]*([a-z0-9]))",SCREAMING_SNAKE_CASE:"+([A-Z])*([A-Z0-9])*(_+([A-Z0-9]))",SNAKE_CASE:"+([a-z])*([a-z0-9])*(_+([a-z0-9]))"});const C=([e,t],o)=>{const r=n.capture(e,o);if(l(r))return[e,t];const a=[...t.matchAll(new RegExp(i,"g"))];if(d(a))return[e,t];const s=a.reduce(((o,n)=>{const i=+n[1];if(l(r[i]))throw new Error(g(t,e));return o.replace(n[0],r[i])}),t);return[e,s]},M=(e,t,o,r)=>n.isMatch(e,t)?o&&r&&n.isMatch(o,P[r]||r)?void 0:{path:e,pattern:r}:void 0,L=`@(${w}|${`\\[${k}\\]`}|${`\\[...${k}\\]`}|${`\\[\\[...${k}\\]\\]`}|${`\\(${w}\\)`}|${`\\@${w}`})`;var F=Object.freeze({__proto__:null,NEXT_JS_APP_ROUTER_CASE:L});const Z=(e,t,o)=>{if(!c(e))return u(e);for(const[n,r]of Object.entries(e)){if(!t(n))return h(n);if(!o(r))return h(r)}},R=e=>Object.keys(P).includes(e),N=r,K=e=>N(e)||R(e)||i.test(e),B=e=>N(e)||R(e)||(e=>Object.keys(F).includes(e))(e);var I={meta:{type:"layout",docs:{description:"The filename should be blocklisted",category:"Layout & Formatting",recommended:!1,url:j("filename-blocklist")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:t=>{const o=e.options[0],n=Z(o,N,N);if(n)return void e.report({node:t,message:n});const r=S(e),i=E(r);for(const[n,a]of Object.entries(o)){if(M(r,n)||M(i,n))return void e.report({node:t,message:b(i,n,a)})}}})},D={meta:{type:"layout",docs:{description:"The filename should follow the filename naming convention",category:"Layout & Formatting",recommended:!1,url:j("filename-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}},{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"}}}]},create:e=>({Program:t=>{const o=e.options[0],n=Z(o,N,K);if(n)return void e.report({node:t,message:n});const r=S(e),i=E(r),{ignoreMiddleExtensions:a}=e.options[1]||{};for(const[n,s]of Object.entries(o))try{const[e,t]=C([n,s],r);if(M(r,e,_(i,a),t))throw new Error(y(i,s))}catch(o){e.report({node:t,message:o.message})}}})},G={meta:{type:"layout",docs:{description:"The folder should match the naming pattern specified by its file",category:"Layout & Formatting",recommended:!1,url:j("folder-match-with-fex")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:t=>{const o=e.options[0],n=Z(o,N,N);if(n)return void e.report({node:t,message:n});const r=S(e),i=E(r),a=x(r);for(const[n,s]of Object.entries(o)){if(M(i,n,a,s))return void e.report({node:t,message:$(r,s)})}}})},J={meta:{type:"layout",docs:{description:"The folder should follow the folder naming convention",category:"Layout & Formatting",recommended:!1,url:j("folder-naming-convention")},fixable:null,schema:[{additionalProperties:{type:"string"}}]},create:e=>({Program:t=>{const o=e.options[0],r=Z(o,N,B);if(r)return void e.report({node:t,message:r});const i=S(e),a=x(i);for(const[r,i]of Object.entries(o))if(n.isMatch(a,r,{contains:!0}))for(const o of O(a)){const a=n.capture(r,o,{dot:!0});if(l(a))continue;const s=a.filter(m).reduce(((e,t)=>e.concat(v(t))),[]);for(const o of s)if(!n.isMatch(o,P[i]||F[i]||i))return void e.report({node:t,message:A(o,i)})}}})};const U={"filename-blocklist":I,"filename-naming-convention":D,"folder-match-with-fex":G,"folder-naming-convention":J,"no-index":{meta:{type:"layout",docs:{description:'A file cannot be named "index"',category:"Layout & Formatting",recommended:!1,url:j("no-index")},fixable:null,schema:[{type:"object",properties:{ignoreMiddleExtensions:{type:"boolean"}}}]},create:e=>({Program:t=>{const{ignoreMiddleExtensions:o}=e.options[0]||{},n=S(e),r=E(n);"index"!==_(r,o)||e.report({node:t,message:'The filename "index" is not allowed'})}})}};export{U as rules};
